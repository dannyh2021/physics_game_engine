{"ast":null,"code":"const VERTEX_SHADER_SOURCE = `#version 300 es\n\nvoid main() {\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    gl_PointSize = 10.0;\n}\n`;\nconst FRAGMENT_SHADER_SOURCE = `version 300 es\nvoid main() {\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n`;\nexport class GraphicsEngine {\n  constructor(gl) {\n    this.gl = gl;\n  }\n\n  print() {\n    console.log(\"graphics engine print\", this.gl);\n  }\n\n  draw() {\n    this.gl.clearColor(0.0, 0.0, 1.0, 1.0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n  /**\n   * Creates and compiles a shader.\n   * \n   * @param {!WebGLRenderingContext} gl The WebGL context.\n   * @param {string} shaderSource The GLSL source code for the shader.\n   * @param {number} shaderType The type of shader, VERTEX_SHADER or FRAGMENT_SHADER.\n   * @return {!WebGLShader} The shader.\n   */\n\n\n  compileShader(gl, shaderSource, shaderType) {\n    // Create the shader object\n    let shader = gl.createShader(shaderType); // Set the shader source code.\n\n    gl.shaderSource(shader, shaderSource); // Compile the shader\n\n    gl.compileShader(shader); // Check if it compiled\n\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    if (!success) {\n      // Something went wrong during compilation; get the error\n      throw \"could not compile shader:\" + gl.getShaderInfoLog(shader);\n    }\n\n    return shader;\n  }\n  /** \n   * Creates a program from 2 shaders.\n   */\n\n\n}","map":{"version":3,"names":["VERTEX_SHADER_SOURCE","FRAGMENT_SHADER_SOURCE","GraphicsEngine","constructor","gl","print","console","log","draw","clearColor","clear","COLOR_BUFFER_BIT","compileShader","shaderSource","shaderType","shader","createShader","success","getShaderParameter","COMPILE_STATUS","getShaderInfoLog"],"sources":["/Users/danny/Github/physics_game_engine/frontend/src/graphics_engine/GraphicsEngine.ts"],"sourcesContent":["const VERTEX_SHADER_SOURCE =\n`#version 300 es\n\nvoid main() {\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    gl_PointSize = 10.0;\n}\n`\n\nconst FRAGMENT_SHADER_SOURCE =\n`version 300 es\nvoid main() {\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n`;\n\nexport class GraphicsEngine {\n    constructor(private gl: WebGLRenderingContext) {}\n\n    print() {\n        console.log(\"graphics engine print\", this.gl);\n    }\n\n    draw() {\n        this.gl.clearColor(0.0, 0.0, 1.0, 1.0);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n\n    /**\n     * Creates and compiles a shader.\n     * \n     * @param {!WebGLRenderingContext} gl The WebGL context.\n     * @param {string} shaderSource The GLSL source code for the shader.\n     * @param {number} shaderType The type of shader, VERTEX_SHADER or FRAGMENT_SHADER.\n     * @return {!WebGLShader} The shader.\n     */\n    compileShader(gl: WebGLRenderingContext, shaderSource: string, shaderType: number): WebGLShader {\n        // Create the shader object\n        let shader = gl.createShader(shaderType);\n\n        // Set the shader source code.\n        gl.shaderSource(shader, shaderSource);\n\n        // Compile the shader\n        gl.compileShader(shader);\n\n        // Check if it compiled\n        const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if(!success) {\n            // Something went wrong during compilation; get the error\n            throw \"could not compile shader:\" + gl.getShaderInfoLog(shader);\n        }\n\n        return shader;\n    }\n\n    /** \n     * Creates a program from 2 shaders.\n     */\n}"],"mappings":"AAAA,MAAMA,oBAAoB,GACzB;AACD;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,sBAAsB,GAC3B;AACD;AACA;AACA;AACA,CALA;AAOA,OAAO,MAAMC,cAAN,CAAqB;EACxBC,WAAW,CAASC,EAAT,EAAoC;IAAA,KAA3BA,EAA2B,GAA3BA,EAA2B;EAAE;;EAEjDC,KAAK,GAAG;IACJC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKH,EAA1C;EACH;;EAEDI,IAAI,GAAG;IACH,KAAKJ,EAAL,CAAQK,UAAR,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC;IACA,KAAKL,EAAL,CAAQM,KAAR,CAAc,KAAKN,EAAL,CAAQO,gBAAtB;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,aAAa,CAACR,EAAD,EAA4BS,YAA5B,EAAkDC,UAAlD,EAAmF;IAC5F;IACA,IAAIC,MAAM,GAAGX,EAAE,CAACY,YAAH,CAAgBF,UAAhB,CAAb,CAF4F,CAI5F;;IACAV,EAAE,CAACS,YAAH,CAAgBE,MAAhB,EAAwBF,YAAxB,EAL4F,CAO5F;;IACAT,EAAE,CAACQ,aAAH,CAAiBG,MAAjB,EAR4F,CAU5F;;IACA,MAAME,OAAO,GAAGb,EAAE,CAACc,kBAAH,CAAsBH,MAAtB,EAA8BX,EAAE,CAACe,cAAjC,CAAhB;;IACA,IAAG,CAACF,OAAJ,EAAa;MACT;MACA,MAAM,8BAA8Bb,EAAE,CAACgB,gBAAH,CAAoBL,MAApB,CAApC;IACH;;IAED,OAAOA,MAAP;EACH;EAED;AACJ;AACA;;;AA1C4B"},"metadata":{},"sourceType":"module"}